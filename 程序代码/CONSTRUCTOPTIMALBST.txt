CONSTRUCT_OPTIMAL_BST(root)
if min>=max
   return

if not print anything
   print "k(root[min,max]) is root"

if root[min,max]>min
   print "k(root[min,root[min,max]-1]) is k(root[min,max])'s left child "
   root_left_left[min,root[min,root[min,max]-1])-1]
   root_left_right[root[min,root[min,max]-1])+1,k(root[min,max])-1]
   CONSTRUCT_OPTIMAL_BST(root_left_left)
   CONSTRUCT_OPTIMAL_BST(root_left_right)

if root[min,max]<max
   print "k(root[root[min,max]+1,max]) is k(root[min,max])'s right child "
   root_right_left[root[min,max]+1,k(root[root[min,max]+1,max])-1]
   root_right_right[k(root[root[min,max]+1,max])+1,max]
   CONSTRUCT_OPTIMAL_BST(root_right_left)
   CONSTRUCT_OPTIMAL_BST(root_right_right)

